- name: Manage FortiGate Device
  hosts: all
  collections:
    - fortinet.fortios
  connection: httpapi
  vars:
    vdom: "root"
    ansible_httpapi_use_ssl: yes
    ansible_httpapi_validate_certs: no
    ansible_httpapi_port: 8443
    access_token: "{{ fortios_access_token }}"  # Define your access token here
    firmware_image_path: "/tmp/FGT_40F-v7.4.1.F-build2463-FORTINET.out"  # Path to local firmware image
    remote_firmware_path: "/tmp/FGT_40F-v7.4.1.F-build2463-FORTINET.out"  # Path to remote firmware image
  tasks:
    - name: Copy firmware image to remote host
      copy:
        src: "{{ firmware_image_path }}"
        dest: "{{ remote_firmware_path }}"
      register: copy_result

    - name: Verify firmware image is copied
      stat:
        path: "{{ remote_firmware_path }}"
      register: stat_result

    - name: Fail if firmware image is not copied
      fail:
        msg: "Firmware image was not copied to remote host."
      when: not stat_result.stat.exists

    - name: Read firmware image content
      slurp:
        src: "{{ remote_firmware_path }}"
      register: firmware_image

    - name: Upgrade firmware on FortiGate
      fortinet.fortios.fortios_monitor:
        vdom: "{{ vdom }}"
        access_token: "{{ access_token }}"
        selector: 'upgrade.system.firmware'
        params:
          file_content: "{{ firmware_image.content | b64decode }}"
      register: firmware_upgrade_result

    - name: Show firmware upgrade result
      debug:
        msg: "Firmware upgrade result: {{ firmware_upgrade_result }}"
      when: firmware_upgrade_result is defined

    - name: Reboot This Device
      fortinet.fortios.fortios_monitor:
        vdom: "{{ vdom }}"
        access_token: "{{ access_token }}"
        selector: 'reboot.system.os'
        params:
          event_log_message: 'Reboot Request From Ansible'
      register: reboot_result

    - name: Show reboot result
      debug:
        msg: "Reboot result: {{ reboot_result }}"
      when: reboot_result is defined
